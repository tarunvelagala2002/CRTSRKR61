Linked list - Searching an element:

Write a Program to search an element from the list.

Input Format

Read elements upto -1

Constraints

1<=n<=10^7

Output Format

print output

Sample Input 0

1
2
3
4
-1
3
Sample Output 0

3 is present in the list
Sample Input 1

1
2
3
4
5
-1
4
Sample Output 1

4 is present in the list
Sample Input 2

23
11
44
53
3
56
-1
88
Sample Output 2

88 not present in the list

code:
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def insert_at_end(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return
        temp = self.head
        while temp.next:
            temp = temp.next
        temp.next = new_node

    def search_element(self, target):
        temp = self.head
        while temp:
            if temp.data == target:
                return True
            temp = temp.next
        return False

linked_list = LinkedList()
while True:
    value = int(input())
    if value < 0:
        break
    linked_list.insert_at_end(value)

search_value = int(input())
if linked_list.search_element(search_value):
    print(f"{search_value} is present in the list")
else:
    print(f"{search_value} not present in the list")
